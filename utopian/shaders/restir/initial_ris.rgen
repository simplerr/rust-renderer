#version 460
#extension GL_EXT_ray_tracing : enable

#include "include/bindless.glsl"
#include "include/view.glsl"
#include "include/atmosphere.glsl"
#include "include/random.glsl"
#include "include/restir_sampling.glsl"

layout (set = 2, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout (set = 2, binding = 1) uniform sampler2D in_gbuffer_position;
layout (std430, set = 2, binding = 2) buffer ReservoirSSBO
{
   Reservoir reservoirs[];
} reservoirSSBO;

layout (location = 0) rayPayloadEXT int rayPayload;

void main()
{
   uint rngState = initRNG(gl_LaunchIDEXT.xy, gl_LaunchSizeEXT.xy, view.total_samples);
   vec2 uv = vec2(gl_LaunchIDEXT.xy) / vec2(gl_LaunchSizeEXT.xy);
   vec3 hit_position = texture(in_gbuffer_position, uv).rgb;

   Reservoir new_reservoir;
   new_reservoir.Y = -1;
   new_reservoir.W_sum = 0.0;
   new_reservoir.W_X = 0.0;
   new_reservoir.M = 0;

   Reservoir reservoir = resample(rngState, hit_position);
   updateReservoir(rngState, new_reservoir, reservoir.Y, reservoir.W_sum * reservoir.M, reservoir.M);

   float p_hat = target_function(new_reservoir.Y, hit_position);
   finalize_resampling(new_reservoir, p_hat);

   reservoirSSBO.reservoirs[gl_LaunchIDEXT.y * gl_LaunchSizeEXT.x + gl_LaunchIDEXT.x] = new_reservoir;

}
